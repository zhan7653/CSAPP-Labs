                            | #######################################################################
                            | # Test for copying block of size 4;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4f001000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f20400000000000000 | 	irmovq $4, %rdx		# src and dst have 4 elements
0x014: 30f64801000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f71001000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | # Version1: Didn't change the c code.
                            | # Just use iaddq and cut out some redundant instrutions
                            | # Average CPE: 11.70
                            | 
                            | 	# Loop header
0x032: 6300                 | 	xorq %rax,%rax		# count = 0;
0x034: c0f2ffffffffffffffff | 	iaddq $-1,%rdx		# len--, len <= 0?
0x03e: 71d400000000000000   | 	jle Check		# if so, goto Check:
                            | 
0x047:                      | Loop:	
0x047: 50a70000000000000000 | 	mrmovq (%rdi), %r10	# read val from src...
0x051: 40a60000000000000000 | 	rmmovq %r10, (%rsi)	# ...and store it to dst
0x05b: 62aa                 | 	andq %r10, %r10		# val <= 0?
0x05d: 717000000000000000   | 	jle Npos1		# if so, goto Npos:
0x066: c0f00100000000000000 | 	iaddq $1, %rax		# count++
0x070:                      | Npos1:	
0x070: c0f70800000000000000 | 	iaddq $8, %rdi		# src++
0x07a: c0f60800000000000000 | 	iaddq $8, %rsi		# dst++
0x084: 50a70000000000000000 | 	mrmovq (%rdi), %r10	# read val from src...
0x08e: 40a60000000000000000 | 	rmmovq %r10, (%rsi)	# ...and store it to dst	
0x098: 62aa                 | 	andq %r10, %r10		# val <= 0?
0x09a: 71ad00000000000000   | 	jle Npos2		# if so, goto Npos:
0x0a3: c0f00100000000000000 | 	iaddq $1, %rax		# count++
0x0ad:                      | Npos2:	
0x0ad: c0f70800000000000000 | 	iaddq $8, %rdi		# src++
0x0b7: c0f60800000000000000 | 	iaddq $8, %rsi		# dst++	
0x0c1: c0f2feffffffffffffff | 	iaddq $-2, %rdx		# len -= 2
0x0cb: 764700000000000000   | 	jg Loop			# if so, goto Loop:
0x0d4:                      | Check:
0x0d4: 6233                 | 	andq %rbx, %rbx 	# len < 0?
0x0d6: 720801000000000000   | 	jl Done			# if not, goto Done
0x0df: 50a70000000000000000 | 	mrmovq (%rdi), %r10	# read val from src...
0x0e9: 40a60000000000000000 | 	rmmovq %r10, (%rsi)	# ...and store it to dst
0x0f3: 62aa                 | 	andq %r10, %r10		# val <= 0?	
0x0f5: 710801000000000000   | 	jle Done		# if so, goto Done:
0x0fe: c0f00100000000000000 | 	iaddq $1, %rax		# count++	
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x108:                      | Done:
0x108: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x109:                      | End:
                            | #/* $end ncopy-ys */
0x109:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x110:                      | 	.align 8
0x110:                      | src:
0x110: ffffffffffffffff     | 	.quad -1
0x118: 0200000000000000     | 	.quad 2
0x120: 0300000000000000     | 	.quad 3
0x128: fcffffffffffffff     | 	.quad -4
0x130: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x140:                      | 	.align 16
0x140:                      | Predest:
0x140: fadebc0000000000     | 	.quad 0xbcdefa
0x148:                      | dest:
0x148: abefcd0000000000     | 	.quad 0xcdefab
0x150: abefcd0000000000     | 	.quad 0xcdefab
0x158: abefcd0000000000     | 	.quad 0xcdefab
0x160: abefcd0000000000     | 	.quad 0xcdefab
0x168:                      | Postdest:
0x168: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x170:                      | .align 8
                            | # Run time stack
0x170: 0000000000000000     | 	.quad 0
0x178: 0000000000000000     | 	.quad 0
0x180: 0000000000000000     | 	.quad 0
0x188: 0000000000000000     | 	.quad 0
0x190: 0000000000000000     | 	.quad 0
0x198: 0000000000000000     | 	.quad 0
0x1a0: 0000000000000000     | 	.quad 0
0x1a8: 0000000000000000     | 	.quad 0
0x1b0: 0000000000000000     | 	.quad 0
0x1b8: 0000000000000000     | 	.quad 0
0x1c0: 0000000000000000     | 	.quad 0
0x1c8: 0000000000000000     | 	.quad 0
0x1d0: 0000000000000000     | 	.quad 0
0x1d8: 0000000000000000     | 	.quad 0
0x1e0: 0000000000000000     | 	.quad 0
0x1e8: 0000000000000000     | 	.quad 0
                            | 
0x1f0:                      | Stack:
