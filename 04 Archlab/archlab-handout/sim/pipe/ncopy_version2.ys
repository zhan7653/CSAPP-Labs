#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
# Version2: 2x2 unloop
# Average CPE: 8.68

	# Loop header
	# xorq %rax, %rax	# %rax already equals 0 in this environment
	iaddq $-1, %rdx		# len++, len <= 0?
	jle Check	    	# if so, goto Check:

Loop:	
	mrmovq (%rdi), %r10	    # read val from src[i]
	mrmovq 8(%rdi), %r11	# read val1 from src[i+1]
	rmmovq %r10, (%rsi) 	# store val to dst[i]
	rmmovq %r11, 8(%rsi)	# store val1 to dst[i+1]
	andq %r10, %r10		    # val <= 0?
	jle Npos1
	iaddq $1, %rax      # count++
Npos1:
	andq %r11, %r11		# val1 <= 0?
	jle Npos2
	iaddq $1, %rax		# count++
Npos2:	
	iaddq $16, %rdi		# src += 2
	iaddq $16, %rsi		# dst += 2
	iaddq $-2, %rdx		# len - 2
	jg Loop			    # if so, goto Loop:
Check:
	jl Done                 # len < 0?(len = -1), if so, goto Done
	mrmovq (%rdi), %r10	    # read val from src...
	rmmovq %r10, (%rsi)	    # ...and store it to dst
	andq %r10, %r10		    # val <= 0?
	jle Done
	iaddq $1, %rax	

##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
