                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f49805000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f61803000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f71001000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | # Version1: Didn't change the c code.
                            | # Just use iaddq and cut out some redundant instrutions
                            | # Average CPE: 11.70
                            | 
                            | 	# Loop header
0x032: 6300                 | 	xorq %rax,%rax		# count = 0;
0x034: c0f2ffffffffffffffff | 	iaddq $-1,%rdx		# len--, len <= 0?
0x03e: 71d400000000000000   | 	jle Check		# if so, goto Check:
                            | 
0x047:                      | Loop:	
0x047: 50a70000000000000000 | 	mrmovq (%rdi), %r10	# read val from src...
0x051: 40a60000000000000000 | 	rmmovq %r10, (%rsi)	# ...and store it to dst
0x05b: 62aa                 | 	andq %r10, %r10		# val <= 0?
0x05d: 717000000000000000   | 	jle Npos1		# if so, goto Npos:
0x066: c0f00100000000000000 | 	iaddq $1, %rax		# count++
0x070:                      | Npos1:	
0x070: c0f70800000000000000 | 	iaddq $8, %rdi		# src++
0x07a: c0f60800000000000000 | 	iaddq $8, %rsi		# dst++
0x084: 50a70000000000000000 | 	mrmovq (%rdi), %r10	# read val from src...
0x08e: 40a60000000000000000 | 	rmmovq %r10, (%rsi)	# ...and store it to dst	
0x098: 62aa                 | 	andq %r10, %r10		# val <= 0?
0x09a: 71ad00000000000000   | 	jle Npos2		# if so, goto Npos:
0x0a3: c0f00100000000000000 | 	iaddq $1, %rax		# count++
0x0ad:                      | Npos2:	
0x0ad: c0f70800000000000000 | 	iaddq $8, %rdi		# src++
0x0b7: c0f60800000000000000 | 	iaddq $8, %rsi		# dst++	
0x0c1: c0f2feffffffffffffff | 	iaddq $-2, %rdx		# len -= 2
0x0cb: 764700000000000000   | 	jg Loop			# if so, goto Loop:
0x0d4:                      | Check:
0x0d4: 6233                 | 	andq %rbx, %rbx 	# len < 0?
0x0d6: 720801000000000000   | 	jl Done			# if not, goto Done
0x0df: 50a70000000000000000 | 	mrmovq (%rdi), %r10	# read val from src...
0x0e9: 40a60000000000000000 | 	rmmovq %r10, (%rsi)	# ...and store it to dst
0x0f3: 62aa                 | 	andq %r10, %r10		# val <= 0?	
0x0f5: 710801000000000000   | 	jle Done		# if so, goto Done:
0x0fe: c0f00100000000000000 | 	iaddq $1, %rax		# count++	
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x108:                      | Done:
0x108: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x109:                      | End:
                            | #/* $end ncopy-ys */
0x109:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x110:                      | 	.align 8
0x110:                      | src:
0x110: ffffffffffffffff     | 	.quad -1
0x118: feffffffffffffff     | 	.quad -2
0x120: 0300000000000000     | 	.quad 3
0x128: fcffffffffffffff     | 	.quad -4
0x130: fbffffffffffffff     | 	.quad -5
0x138: 0600000000000000     | 	.quad 6
0x140: f9ffffffffffffff     | 	.quad -7
0x148: f8ffffffffffffff     | 	.quad -8
0x150: f7ffffffffffffff     | 	.quad -9
0x158: f6ffffffffffffff     | 	.quad -10
0x160: 0b00000000000000     | 	.quad 11
0x168: 0c00000000000000     | 	.quad 12
0x170: f3ffffffffffffff     | 	.quad -13
0x178: f2ffffffffffffff     | 	.quad -14
0x180: f1ffffffffffffff     | 	.quad -15
0x188: 1000000000000000     | 	.quad 16
0x190: efffffffffffffff     | 	.quad -17
0x198: eeffffffffffffff     | 	.quad -18
0x1a0: 1300000000000000     | 	.quad 19
0x1a8: 1400000000000000     | 	.quad 20
0x1b0: ebffffffffffffff     | 	.quad -21
0x1b8: eaffffffffffffff     | 	.quad -22
0x1c0: e9ffffffffffffff     | 	.quad -23
0x1c8: e8ffffffffffffff     | 	.quad -24
0x1d0: e7ffffffffffffff     | 	.quad -25
0x1d8: 1a00000000000000     | 	.quad 26
0x1e0: 1b00000000000000     | 	.quad 27
0x1e8: e4ffffffffffffff     | 	.quad -28
0x1f0: e3ffffffffffffff     | 	.quad -29
0x1f8: 1e00000000000000     | 	.quad 30
0x200: e1ffffffffffffff     | 	.quad -31
0x208: 2000000000000000     | 	.quad 32
0x210: dfffffffffffffff     | 	.quad -33
0x218: 2200000000000000     | 	.quad 34
0x220: ddffffffffffffff     | 	.quad -35
0x228: 2400000000000000     | 	.quad 36
0x230: 2500000000000000     | 	.quad 37
0x238: daffffffffffffff     | 	.quad -38
0x240: d9ffffffffffffff     | 	.quad -39
0x248: d8ffffffffffffff     | 	.quad -40
0x250: d7ffffffffffffff     | 	.quad -41
0x258: 2a00000000000000     | 	.quad 42
0x260: 2b00000000000000     | 	.quad 43
0x268: 2c00000000000000     | 	.quad 44
0x270: d3ffffffffffffff     | 	.quad -45
0x278: 2e00000000000000     | 	.quad 46
0x280: 2f00000000000000     | 	.quad 47
0x288: 3000000000000000     | 	.quad 48
0x290: 3100000000000000     | 	.quad 49
0x298: ceffffffffffffff     | 	.quad -50
0x2a0: 3300000000000000     | 	.quad 51
0x2a8: 3400000000000000     | 	.quad 52
0x2b0: cbffffffffffffff     | 	.quad -53
0x2b8: 3600000000000000     | 	.quad 54
0x2c0: 3700000000000000     | 	.quad 55
0x2c8: 3800000000000000     | 	.quad 56
0x2d0: c7ffffffffffffff     | 	.quad -57
0x2d8: c6ffffffffffffff     | 	.quad -58
0x2e0: 3b00000000000000     | 	.quad 59
0x2e8: 3c00000000000000     | 	.quad 60
0x2f0: 3d00000000000000     | 	.quad 61
0x2f8: 3e00000000000000     | 	.quad 62
0x300: 3f00000000000000     | 	.quad 63
0x308: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x310:                      | 	.align 16
0x310:                      | Predest:
0x310: fadebc0000000000     | 	.quad 0xbcdefa
0x318:                      | dest:
0x318: abefcd0000000000     | 	.quad 0xcdefab
0x320: abefcd0000000000     | 	.quad 0xcdefab
0x328: abefcd0000000000     | 	.quad 0xcdefab
0x330: abefcd0000000000     | 	.quad 0xcdefab
0x338: abefcd0000000000     | 	.quad 0xcdefab
0x340: abefcd0000000000     | 	.quad 0xcdefab
0x348: abefcd0000000000     | 	.quad 0xcdefab
0x350: abefcd0000000000     | 	.quad 0xcdefab
0x358: abefcd0000000000     | 	.quad 0xcdefab
0x360: abefcd0000000000     | 	.quad 0xcdefab
0x368: abefcd0000000000     | 	.quad 0xcdefab
0x370: abefcd0000000000     | 	.quad 0xcdefab
0x378: abefcd0000000000     | 	.quad 0xcdefab
0x380: abefcd0000000000     | 	.quad 0xcdefab
0x388: abefcd0000000000     | 	.quad 0xcdefab
0x390: abefcd0000000000     | 	.quad 0xcdefab
0x398: abefcd0000000000     | 	.quad 0xcdefab
0x3a0: abefcd0000000000     | 	.quad 0xcdefab
0x3a8: abefcd0000000000     | 	.quad 0xcdefab
0x3b0: abefcd0000000000     | 	.quad 0xcdefab
0x3b8: abefcd0000000000     | 	.quad 0xcdefab
0x3c0: abefcd0000000000     | 	.quad 0xcdefab
0x3c8: abefcd0000000000     | 	.quad 0xcdefab
0x3d0: abefcd0000000000     | 	.quad 0xcdefab
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500: abefcd0000000000     | 	.quad 0xcdefab
0x508: abefcd0000000000     | 	.quad 0xcdefab
0x510:                      | Postdest:
0x510: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x518:                      | .align 8
                            | # Run time stack
0x518: 0000000000000000     | 	.quad 0
0x520: 0000000000000000     | 	.quad 0
0x528: 0000000000000000     | 	.quad 0
0x530: 0000000000000000     | 	.quad 0
0x538: 0000000000000000     | 	.quad 0
0x540: 0000000000000000     | 	.quad 0
0x548: 0000000000000000     | 	.quad 0
0x550: 0000000000000000     | 	.quad 0
0x558: 0000000000000000     | 	.quad 0
0x560: 0000000000000000     | 	.quad 0
0x568: 0000000000000000     | 	.quad 0
0x570: 0000000000000000     | 	.quad 0
0x578: 0000000000000000     | 	.quad 0
0x580: 0000000000000000     | 	.quad 0
0x588: 0000000000000000     | 	.quad 0
0x590: 0000000000000000     | 	.quad 0
                            | 
0x598:                      | Stack:
