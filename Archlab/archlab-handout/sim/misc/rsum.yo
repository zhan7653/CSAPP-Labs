                            | # Execution begins at address 0
0x000:                      |     .pos 0
0x000: 30f40004000000000000 |     irmovq stack, %rsp      # Set up stack pointer
0x00a: 804800000000000000   |     call main               # Execute main program
0x013: 00                   |     halt                    # Terminate program
                            | 
                            | # Sample linked list
0x018:                      |     .align 8
0x018:                      | ele1:
0x018: 0a00000000000000     |     .quad 0x00a
0x020: 2800000000000000     |     .quad ele2
0x028:                      | ele2:
0x028: b000000000000000     |     .quad 0x0b0
0x030: 3800000000000000     |     .quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     |     .quad 0xc00
0x040: 0000000000000000     |     .quad 0
                            | 
0x048:                      | main:
0x048: 30f71800000000000000 |     irmovq ele1, %rdi
0x052: 805c00000000000000   |     call rsum_list           # rsum_list(ele1)
0x05b: 90                   |     ret
                            | 
                            | # long rsum_list(list_ptr ls)
                            | # ls in %rdi
0x05c:                      | rsum_list:
0x05c: a03f                 |     pushq %rbx              # Save register
0x05e: 6300                 |     xorq %rax, %rax         # val = 0
0x060: 6277                 |     andq %rdi, %rdi         # Set CC
0x062: 739800000000000000   |     je return               # Goto return
0x06b: 50070000000000000000 |     mrmovq (%rdi), %rax     # val = ls->val
0x075: 2003                 |     rrmovq %rax, %rbx       # Save val
0x077: 30f80800000000000000 |     irmovq $8, %r8          # Constant 8
0x081: 6087                 |     addq %r8, %rdi          # Get &ls->next
0x083: 50770000000000000000 |     mrmovq (%rdi), %rdi     # ls = ls ->next
0x08d: 805c00000000000000   |     call rsum_list          # rsum_list(ls->next)
0x096: 6030                 |     addq %rbx, %rax         # return val + rest
0x098:                      | return:
0x098: b03f                 |     popq %rbx               # Restore register
0x09a: 90                   |     ret                     # Return
                            | 
                            | 
                            | # Stack starts here and grows to lower address
0x400:                      |     .pos 0x400
0x400:                      | stack:
